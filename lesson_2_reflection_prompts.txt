What happens when you initialize a repository? Why do you need to do it?
It creates a hidden folder of meta data needed to do all the git related tasks.  You run it back navigating to the folder of your choice then running ‘git init’.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Staging area is like the rehearsel before the big show.  It's time to review everything you've done before you commit to the real show.  Time to try new things without repercussions.  Value-wise, you could see what things you've done since the last commit and decide if thats what you want to commit.

How can you use the staging area to make sure you have one commit per logical
change?
use git diff and git status to see what changes were made.  If two files were altered, then that is more than 1 logical change.  Also if you see many things were changed in the diff, then considered making more frequent and smaller commits.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
when you want to test something with a new experimental feature that may break your entire code.  Adding different things like various languages.  Branches make it so you can rest easy when making big changes, since you can always back out and go back to a working version.

How do the diagrams help you visualize the branch structure?
It helped a lot.  Especially with reachability and detached head state.  

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
The master branch acquires the experimental coin feature.  That branch's commits now have the master's parent, and all of its previous commits.  It's represented in that way to show where the branch branched off, and where it merged, and which master commits the branch missed out on while being branched. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

